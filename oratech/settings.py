"""
Django settings for oratech project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from os import environ
from pathlib import Path
import cx_Oracle

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8e28ogd@gf7!f!#d$km0a5pji_jx7))o2u=t)%!8yo598qxe=9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_DEBUG',True)

ALLOWED_HOSTS = [os.environ.get('DJANGO_ALLOWED_HOST','127.0.0.1'), '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'common.apps.CoreConfig',
    'setup.apps.SetupConfig',
    'mobile.apps.MobileConfig',
    'inventory.apps.InventoryConfig',
    'sales.apps.SalesConfig',
    'purchase.apps.PurchaseConfig',
    'warehouse.apps.WarehouseConfig',
    'enquiry.apps.EnquiryConfig',
    'sysadmin.apps.SysadminConfig',
    'pricing.apps.PricingConfig',
    'ecomm.apps.EcommConfig',
    'rest_framework',
    'django_filters'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'oratech.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'common.context_processors.global_settings',
            ],
            'libraries': {
                'modelform_title': 'common.templatetags.modelform_title',
                'query_transform': 'common.templatetags.query_transform',
                'get_responsibilities': 'common.templatetags.get_responsibilities',
                'variableinvariable': 'common.templatetags.variableinvariable',
                'getverbose': 'common.templatetags.getverbose',
                    }
        },
    },
]

WSGI_APPLICATION = 'oratech.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
     'main': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': environ.get('DJANGO_DB','oratechdatah'),
        'USER': environ.get('DJANGO_DB_USER','datahubdev'),
        'PASSWORD': environ.get('DJANGO_DB_PWD','DATAHUBDEV'),
        'HOST': environ.get('DJANGO_DB_HOST','localhost'),
        'PORT': environ.get('DJANGO_DB_PORT','1521'),
    },
    'oratechdatahub': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': 'oratech',
        'USER': 'ORATECHDATAHUB',
        'PASSWORD': 'ORATECHDATAHUB',
        'HOST': '66.206.9.210',
        'PORT': '1521',
    },
    'oratechwhat': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': 'oratech',
        'USER': 'ORATECHWHAT',
        'PASSWORD': 'ORATECHWHAT',
        'HOST': '66.206.9.210',
        'PORT': '1521',
    },
    'oratechany': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': environ.get('DJANGO_DB','oratech'),
        'USER': environ.get('DJANGO_DB_USER','oratech'),
        'PASSWORD': environ.get('DJANGO_DB_PWD','oratech'),
        'HOST': environ.get('DJANGO_DB_HOST','localhost'),
        'PORT': environ.get('DJANGO_DB_PORT','1521'),
    },
    'sqllite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

default_database = environ.get('DJANGO_DEFAULT_DATABASE','main')
DATABASES['default'] = DATABASES[default_database]

REST_FRAMEWORK = {
    "DEFAULT_PERMISSIOIN_CLASSES": [
        "rest_framework.permissions", "Djangomodel.PermissiobsOrAnonReadonly"
        ],
    "DEFAULT_PAGINATION_CLASS":  "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 100,
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATE_INPUT_FORMATS = ('%d-%m-%Y', '%Y-%m-%d')
DATE_FORMAT = "d-m-Y"
DATETIME_FORMAT = "d-m-Y H:i:s"
SHORT_DATE_FORMAT = DATE_FORMAT
SHORT_DATETIME_FORMAT = DATETIME_FORMAT
USE_THOUSAND_SEPARATOR = False
JQUERY_DATE_INPUT_FORMAT = "dd-mm-yy"
JQUERY_DATETIME_INPUT_FORMAT = "dd-mm-yy"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

SETTINGS_DIR = os.path.dirname(__file__)
PROJECT_PATH = os.path.join(SETTINGS_DIR, os.pardir)
PROJECT_PATH = os.path.abspath(PROJECT_PATH)
STATIC_PATH = os.path.join(PROJECT_PATH,'static')
LOCAL_FILE_DIR = os.path.join(PROJECT_PATH,'local')
#STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]
ADMIN_SCRIPTS_DIR = os.path.join(BASE_DIR, 'adminscripts')
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
print(STATIC_PATH, STATIC_ROOT)


# DataFlair #User_Uploaded_Files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

AUTH_USER_MODEL = 'common.CmnUsers'

DEBUG = True

PUB_PAGE_LINES = 15

LOGIN_REDIRECT_URL = '/'

DELETE_TEMPLATE = '/common/confirm_delete.html'
CREATE_TEMPLATE = '/common/model_form.html'
UPDATE_TEMPLATE = '/common/model_edit.html'
LIST_TEMPLATE = '/common/model_list.html'
DETAIL_TEMPLATE = '/common/model_detail.html'

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

### email section
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = os.environ.get('DJANGO_MAIL_ADDRESS','None')
EMAIL_HOST_PASSWORD = os.environ.get('DJANGO_MAIL_PASSWORD','None')
EMAIL_PORT = 587
EMAIL_USE_TLS = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True,
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
        'oratech.common': {
            'handlers': ['console', 'mail_admins'],
            'level': 'INFO',
        }
    }
}